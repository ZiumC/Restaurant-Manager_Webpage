@using Restaurants_Webpage.Models.UserModels.AdministrativeModels.ExtendedModels;
@model (ExtendedRestaurantModel restaurant, IEnumerable<ExtendedDishModel> notAssignedDishes)

@{
    var restaurant = Model.restaurant;
    var notAssignedDishes = Model.notAssignedDishes;

    string pageTitle = "Add new dish";
    ViewData["Title"] = pageTitle;

    var formError = TempData["FormError"];
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"></script>
    <script src="~/js/empForm.js"></script>
</head>
<body>
    <div class="background-page">
        <h1 class="title-text">Add new dish to restaurant '@restaurant?.Name'</h1>
        <div class="line-black"></div>
        <form asp-controller="restaurant" asp-action="addDishToRestaurant" method="post">
            <div class="text-center dish-form-container">
                <table class="card-body-table">
                    <tr>
                        <td class="card-body-table-header">
                            Name:
                        </td>
                        <td class="card-body-table-content">
                            <div class="input-group">
                                <input class="form-control" name="Name" type="text" value="">
                            </div>
                        </td>
                        <input type="hidden" name="idRestaurant" value="@restaurant?.IdRestaurant" />
                    </tr>
                    <tr>
                        <td class="card-body-table-header">
                            Price (PLN):
                        </td>
                        <td class="card-body-table-content">
                            <div class="input-group">
                                <input class="form-control" name="Price" type="number" value="">
                            </div>
                        </td>
                    </tr>
                </table>
                @if (formError != null)
                {
                    <table class="card-body-table">
                        <tr>
                            <td>
                                <label class="error-text">
                                    @Html.Raw(formError)
                                </label>
                            </td>
                        </tr>
                    </table>
                }
            </div>

            <div class="text-center form-btn">
                <input type="submit" value="Save" class="btn btn-success btn-functional action-menu" />
            </div>
        </form>
        <form asp-controller="restaurant" asp-action="restaurants" method="get">
            <div class="text-center">
                <input type="submit" value="Cancel" class="btn btn-danger btn-functional action-menu" />
            </div>
        </form>
        @if (restaurant?.RestaurantDishes == null || restaurant.RestaurantDishes.Count() == 0)
        {
            <div class="row text-center">
                <p>Restaurant dishes not found</p>
            </div>
        }
        else
        {
            <h5 class="heading">Dishes that exists in restaurant '@restaurant.Name'</h5>
            <table class="table table-striped text-center">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Dish</th>
                        <th scope="col">Price (PLN)</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int rowCounter = 1;
                        foreach (var dish in restaurant.RestaurantDishes)
                        {
                            string dishName = dish.Name;
                            string dishPrice = string.Format("{0:0.00}", dish.Price);
                            <tr>
                                <th scope="row">@rowCounter</th>
                                <td>@dishName</td>
                                <td>@dishPrice</td>
                                <td>
                                    <div>
                                        <form asp-controller="restaurant" asp-action="removeDishFromRestaurant" method="post">
                                            <input type="hidden" name="idDish" value="@dish.IdDish" />
                                            <input type="hidden" name="idRestaurant" value="@restaurant.IdRestaurant" />
                                            <input type="submit" value="Remove" class="btn btn-danger btn-functional-table action-menu" />
                                        </form>
                                    </div>
                                </td>
                            </tr>
                            rowCounter++;
                        }
                    }
                </tbody>
            </table>
        }
        @{
            if (notAssignedDishes != null && notAssignedDishes.Count() > 0 && restaurant != null)
            {
                <h5 class="heading">Dishes that not assigned to restaurant '@restaurant.Name'</h5>
                <table class="table table-striped text-center">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Dish</th>
                            <th scope="col">Price (PLN)</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int rowCounter = 1;
                            foreach (var dish in notAssignedDishes)
                            {
                                string dishName = dish.DishName;
                                string dishPrice = string.Format("{0:0.00}", dish.DishPrice);
                                <tr>
                                    <th scope="row">@rowCounter</th>
                                    <td>@dishName</td>
                                    <td>@dishPrice</td>
                                    <td>
                                        <div class="btn-functional-container">
                                            <form asp-controller="restaurant" asp-action="assignDishToRestaurant" method="post">
                                                <input type="hidden" name="idDish" value="@dish.IdDish" />
                                                <input type="hidden" name="idRestaurant" value="@restaurant.IdRestaurant" />
                                                <input type="submit" value="Assign" class="btn btn-success btn-functional-table action-menu" />
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                                rowCounter++;
                            }
                        }
                    </tbody>
                </table>

            }
        }

    </div>
</body>
</html>